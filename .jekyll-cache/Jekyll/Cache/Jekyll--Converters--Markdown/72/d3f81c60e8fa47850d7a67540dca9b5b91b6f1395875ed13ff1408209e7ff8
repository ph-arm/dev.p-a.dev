I"Ô<p>Found this gem on stackoverflow. The design is really smooth, especially in a task that always feel like a burden, pattern regex matching.
what really shine is the cleaningness and the readability of the config, even if we have to correct the regex for the last element if there is no extra char after.</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">#for nginx defualt log :
</span><span class="n">log_line</span><span class="o">=</span><span class="s">'''10.10.14.5 - - [09/Mar/2021:17:27:33 +0200] "GET /ca_st/info.php HTTP/1.1" 404 153 "-" "Mozilla/5.0 (X11; Linux x86_64; rv:69.0) Gecko/20100101 Firefox/69.0"'''</span>

<span class="n">config</span> <span class="o">=</span> <span class="s">'$remote_addr - $user [$timestamp] "$request" $response_code $response_size "$referer" "$user_agent"'</span>
<span class="n">regex</span> <span class="o">=</span> <span class="s">''</span><span class="p">.</span><span class="n">join</span><span class="p">(</span>
    <span class="s">'(?P&lt;'</span> <span class="o">+</span> <span class="n">g</span> <span class="o">+</span> <span class="s">'&gt;.*?)'</span> <span class="k">if</span> <span class="n">g</span> <span class="k">else</span> <span class="n">re</span><span class="p">.</span><span class="n">escape</span><span class="p">(</span><span class="n">c</span><span class="p">)</span>
    <span class="k">for</span> <span class="n">g</span><span class="p">,</span> <span class="n">c</span> <span class="ow">in</span> <span class="n">re</span><span class="p">.</span><span class="n">findall</span><span class="p">(</span><span class="sa">r</span><span class="s">'\$(\w+)|(.)'</span><span class="p">,</span> <span class="bp">self</span><span class="p">.</span><span class="n">config</span><span class="p">))</span>
<span class="c1"># fix the regex if the last element has nothng afer:
</span><span class="k">if</span> <span class="n">regex</span><span class="p">[</span><span class="o">-</span><span class="mi">2</span><span class="p">]</span> <span class="o">==</span> <span class="s">'?'</span><span class="p">:</span>
    <span class="n">regex</span> <span class="o">=</span> <span class="n">regex</span><span class="p">[:</span><span class="o">-</span><span class="mi">2</span><span class="p">]</span><span class="o">+</span><span class="s">')'</span>

<span class="n">reg_</span> <span class="o">=</span> <span class="n">re</span><span class="p">.</span><span class="nb">compile</span><span class="p">(</span><span class="n">regex</span><span class="p">)</span>
<span class="n">match</span> <span class="o">=</span> <span class="n">reg_</span><span class="p">.</span><span class="n">search</span><span class="p">(</span><span class="n">log_line</span><span class="p">.</span><span class="n">strip</span><span class="p">())</span>
<span class="k">return</span> <span class="n">match</span><span class="p">.</span><span class="n">groupdict</span><span class="p">()</span>

</code></pre></div></div>
:ET